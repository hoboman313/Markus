# Render the source code for syntax highlighting...
begin
  page['code_pane'].onmousemove = nil

  if !@fail_msg.nil?
    page['options_success']['style']['display'] = 'none'
    page['options_fail']['style']['display'] = 'block'
    page.replace_html 'options_fail', @fail_msg

    # highlight the new message briefly
    page["options_fail"].visual_effect :highlight, :startcolor => "#FFFFE0",
                                       :endcolor => "#FFFFFF", :restorecolor => "#FFFFE0"
  else
    # HACK: updating the #selected_file hidden field for the download button
    page['selected_file']['value'] = @submission_file_id

    # Non-binary files
    if !SubmissionFile.is_binary?(@file_contents) and @encoding != "unknown"
      @file_contents = Iconv.conv("utf-8", @encoding, @file_contents)

      page.replace_html 'view_options',
        :partial => 'results/marker/view_options',
        :locals => { :submission_file_id => @submission_file_id,
        :file_contents => @file_contents, :encoding => @encoding,
        :code_type => @code_type }

      if !@success_msg.nil?
        page['options_success']['style']['display'] = 'block' 
        page.replace_html 'options_success', @success_msg

        # highlight the new message briefly
        page["options_success"].visual_effect :highlight, :startcolor => "#BDFCC9",
                                              :endcolor => "#FFFFFF", :restorecolor => "#BDFCC9"
      end

      page.replace_html 'codeviewer',
        :partial => 'results/common/text_codeviewer',
        :locals => { :file_contents => @file_contents,
        :annots => @annots, :code_type => @code_type}
    # Supported image files and pdfs
    elsif @file.is_supported_image? || @file.is_pdf?
      # render view_options with no params = all fields are disabled
      page.replace_html 'view_options',
        :partial => 'results/marker/view_options'

      page.replace_html 'codeviewer',
        :partial => 'results/common/image_codeviewer',
        :locals => { :file_contents => @file_contents,
        :annots => @annots, :submission_file_id => @submission_file_id}
    # Rest of the files
    else
      # render view_options with no params = all fields are disabled
      page.replace_html 'view_options',
        :partial => 'results/marker/view_options'
        
      page.replace_html 'codeviewer',
        :partial => 'results/common/text_codeviewer',
        :locals => { :file_contents => I18n.t("submission_file.error.binary_file_message"),
        :annots => @annots, :code_type => @code_type}
    end
  
    # Also update the annotation_summary_list
    if @current_user.ta? || @current_user.admin?
      page.replace_html 'annotation_summary_list',
        :partial => 'results/marker/annotation_summary',
        :locals => {:annots => @all_annots,
        :submission_file_id => @submission_file_id}
      page.call "hide_all_annotation_content_editors"
    else
      page.replace_html 'annotation_summary_list',
        :partial => 'results/student/annotation_summary',
        :locals => {:annots => @all_annots,
        :submission_file_id => @submission_file_id}
      end
  end
rescue Exception => e
  # TODO: Make this more graceful
  page.call "alert", t("common.error.exception")
  page.alert e.message
end